mean(ts_date)
ts_interval <- tapply(x$steps, x$interval, sum, na.rm=TRUE)
ts_interval
ts_interval <- tapply(x$steps, x$interval, sum, na.rm=TRUE)
mean(ts_interval)
ts_interval <- tapply(x$steps, x$interval, mean, na.rm=TRUE)
ts_interval
x <- read.csv("activity.csv")
summary(x)
ts_interval <- tapply(x$steps, x$interval, sum, na.rm=TRUE)
ts_interval
sapply(ts_interval, mean)
r <- sapply(ts_interval, mean)
r <- lapply(ts_interval, mean)
ts_interval <- tapply(x$steps, x$interval, mean, na.rm=TRUE)
ts_interval
view(r)
library(rstudio)
viewData(r)
?viewData
??viewdata
??viewData
??view
?view
library(rstudio)
ts_interval <- tapply(x$steps, x$interval, sum, na.rm=TRUE)
ts_interval <- tapply(x$steps, x$interval, mean, na.rm=TRUE)
rcharts(ts_interval)
import(rCharts)
library(rCharts)
rCharts(ts_interval)
qplot(ts_interval)
qplot(ts_interval)
library(ggplot)
library(ggplot2)
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
qplot(ts_interval)
as.data.frame(ts_interval)
t <- as.data.frame(ts_interval)
View(t)
qplot(t)
t <- as.data.frame(t)
qplot(t)
qplot(t$row.names, t$ts_interval)
hist(t)
hist(t$ts_interval)
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
summary(ts_date)
hist(ts_date)
?hist
ts_date
ts_date_table <- as.data.frame(ts_date)
names(ts_date_table)
View(ts_date_table)
names(ts_date_table) <- c('date', meansteps)
names(ts_date_table) <- c('date', 'meansteps')
colnames <- c('date', 'meansteps')
names(ts_date_table) <- colnames
View(ts_date_table)
names(ts_date_table) <- colnames
hist(t$ts_date)
hist(ts_date_table)
hist(ts_date_table$ts_date)
hist(ts_date_table$row.names)
class(ts_date_table)
class(ts_date_table$row.names)
as.date(ts_date_table$row.names)
as.Date(ts_date_table$row.names)
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
summary(ts_date)
class(ts_date)
names(ts_date) <- c('date', 'meansteps')
summary(ts_date)
summary(ts_date$meansteps)
hist(ts_date)
ts_date_table <- as.data.frame(ts_date)
View(ts_date_table)
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
names(ts_date) <- c('date', 'meansteps')
summary(ts_date)
class(ts_date$date)
ts_date_table <- as.data.frame(ts_date)
View(ts_date_table)
ts_date
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
summary(ts_date)
ts_date
ts_date_table <- as.data.frame(ts_date)
View(ts_date_table)
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
names(ts) <- c('date', 'meansteps')
summary(ts_date)
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
summary(ts_date)
ts_date_table <- as.data.frame(ts_date)
names(ts_date_table) <- c('date', 'meansteps')
View(ts_date_table)
ts_date <- tapply(x$steps, x$date, sum, na.rm=TRUE)
summary(ts_date)
ts_date_table <- as.data.frame(ts_date)
names(ts_date_table) <- c("date", "meansteps")
View(x)
class(ts_date_table$row.names)
class(ts_date_table$ts_date)
as.integer(ts_date_table$ts_date)
ts_date_table$ts_date <- as.integer(ts_date_table$ts_date)
class(ts_date_table$ts_date)
ts_date_table$ts_date <- as.Date(ts_date_table$row.names)
ates <- as.Date(strDates, "%m/%d/%Y")
ts_date_table$row.names <- as.Date(ts_date_table$row.names, "%Y-%m-%d")
ts_date_table$Date <- as.Date(ts_date_table$row.names, "%Y-%m-%d")
ts_date_table$Date <- ts_date_table$row.names
View(ts_date_table)
View(ts_date_table)
View(ts_date_table)
View(ts_date_table)
View(ts_date_table)
ts_date_table$Date <- ts_date_table$row.names
ggplot
ggplot2
ggplot(ts_date)
ggplot(ts_date[1])
hist(ts_date)
head(ts_date)
x
tapply(x$steps, x$date, sum, na.rm=TRUE)
aggregate(x$steps, x$date, sum, na.rm=TRUE)
aggregate(x$steps, list(x$date), sum, na.rm=TRUE)
ts_dframe <- aggregate(x$steps, list(x$date), sum, na.rm=TRUE)
View(ts_dframe)
names(ts_dframe) <- c("Date", "Steps")
View(ts_dframe)
View(ts_dframe)
View(ts_date_table)
ggplot(ts_dframe$Date, ts_dframe$Steps)
qplot(ts_dframe$Date, ts_dframe$Steps)
ls
ls()
library(ggplot)
library(ggplot2)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
qplot(ts_byint$Date, ts_byint$Steps)
View(x)
sum(is.na(x$steps))
is.na(x$steps)
is.na(x$steps)
for (interval in ts_byint) {
print(ts_byint$Date)
}
for(i in 1:nrow(ts_byint)) {
if as.na(ts_byint[i, "Steps") == TRUE
ts_byint[i]
row <- ts_byint[i,""]
# do stuff with row
}
for(i in 1:nrow(ts_byint)) {
if (as.na(ts_byint[i, "Steps") == TRUE) {
ts_byint[i]
row <- ts_byint[i,""]
# do stuff with row
}
}
for (i in 1:nrow(ts_byint)) {
if (as.na(ts_byint[i, "Steps") == TRUE) {
ts_byint[i]
row <- ts_byint[i,""]
# do stuff with row
}
}
for (i in 1:nrow(ts_byint)) {
if (as.na(ts_byint[i, "Steps"]) == TRUE) {
ts_byint[i]
row <- ts_byint[i,""]
# do stuff with row
}
}
for (i in 1:nrow(ts_byint)) {
if (is.na(ts_byint[i, "Steps"]) == TRUE) {
ts_byint[i]
} else {
x
}
}
for (i in 1:nrow(ts_byint)) {
if (is.na(ts_byint)[i, "Steps"] == TRUE) {
ts_byint[i]
} else {
x
}
}
for (i in 1:nrow(ts_byint)) {
if (is.na((ts_byint$Steps[i]) == TRUE) {
ts_byint[i]
} else {
x
}
}
for (i in 1:nrow(ts_byint)) {
if (is.na((ts_byint$Steps[i]) == TRUE) {
ts_byint[i] <- 999
}
}
for (i in 1:nrow(ts_byint)) {
print i
}
for (i in 1:nrow(ts_byint)) {
print(i)
}
for (i in 1:nrow(ts_byint)) {
if (is.na((ts_byint$Steps[i]) == TRUE) {
print(i)
#ts_byint[i] <- 999
}
}
for (i in 1:nrow(ts_byint)) {
if (is.na(ts_byint$Steps[i]) {
print(i)
#ts_byint[i] <- 999
}
}
for (i in 1:nrow(ts_byint)) {
print(i)
}
for (i in 1:nrow(ts_byint)) {
if (is.na(ts_byint$Steps[i]) {
print(i)
#ts_byint[i] <- 999
}
}
for (i in x$steps) {
if (i == NA)
print(i)
}
for (i in x$steps) {
if (i == NA) {
print(i)
}
}
for (i in x$steps) {
if (i > 5) {
print(i)
}
}
for (i in x$steps) {
if (is.na(i)) {
print(i)
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x[i,])
}
}
for (i in x$steps) {
if (!is.na(i)) {
print(x[i,])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$interval[i])
}
}
i = 32
print(x$interval[i])
for (i in x$steps) {
if (!is.na(i)) {
print(x$interval[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$interval[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print[i]
print(x$interval[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(i)
print(x$interval[i])
}
}
for (i in x$steps) {
if (!is.na(i)) {
print(i)
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
print(i)
if (is.na(i)) {
print(i)
print(x$interval[i])
print(x$date[i])
}
}
x$intervalmean <- ts_byint$Steps
head(x)
intervalmean <- ts_byint$Steps
View(ts_byint)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
intervalmean <- ts_byint$Steps
x$intervalmean <- ts_byint$Steps
View(x)
for (i in x$steps) {
print(i)
}
for (i in x$steps) {
if (is.na(i)) {
print(i)
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print x$steps[i]
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$steps[i])
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$steps[i,])
print(x$interval[i,])
print(x$date[i,])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$steps[,i])
print(x$interval[,i])
print(x$date[,i])
}
}
print(x$steps[i])
i=2000
print(x$steps[i])
i=4000
print(x$steps[i])
print(x$steps[1])
print(x$steps[5555])
print(x$steps[555])
for (i in x$steps) {
if (!is.na(i)) {
print(x$steps[i])
print(x$interval[i])
print(x$date[i])
}
}
for (i in x) {
if (!is.na(x$steps[i])) {
print(x$steps[i])
print(x$interval[i])
print(x$date[i])
}
}
is.na(x$steps[444])
is.na(x$steps[444])
!is.na(x$steps[i])
!is.na(x$steps[6])
is.na(x$steps[6])
for (i in x) {
if (is.na(x$steps[i])) {
print(x$interval[i])
print(x$date[i])
}
}
for (i in x) {
if (is.na(x$steps[i])) {
print(x$interval[i])
print(x$date[i])
} else {
print(i)
}
}
for (i in x) {
if (is.na(x$steps[i])) {
print(x$intervalmean[i])
print(x$date[i])
} else {
print(i)
}
}
for (i in x) {
if (is.na(x$steps[i])) {
x$steps[i] <- x$intervalmean[i]
}
}
View(x)
View(x)
x[is.na(x$steps)] <- '.'
x$steps[is.na(x$steps)] <- '.'
View(x)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
x$steps[is.na(x$steps)] <- x$intervalmean
View(x)
x$steps[is.na(x$steps)] <- x$intervalmean
for i in x {
if  x$steps[is.na(x$steps)] {
print x$steps(i)
}
}
for (i in x) {
if (x$steps[is.na(x$steps)]) {
print x$steps(i)
}
}
for (i in x) {
if (is.na(x$steps[i]) {
print x$steps(i)
}
}
for (i in x) {
if (is.na(x$steps[i]) {
print x$steps[(i)]
}
for (i in x) {
x[is.na(x)] = x$intervalmean[i]
}
for (i in x) {
x[is.na(x)] <- x$intervalmean[i]
}
impute.value <- function(i) {
z <- i$intervalmean
i[is.na(i)] <- z
return(i)
}
dat2 <- sapply(x, function(x){
if(is.numeric(x) & any(is.na(x))){
impute.value(x)
}
}
)
View(x)
x$steps[is.na(x$steps)] <- x$intervalmean
x$intervalmean <- ts_byint$Steps
x$steps[is.na(x$steps)] <- x$intervalmean
View(x)
View(x)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
x$intervalmean <- ts_byint$Steps
x$steps[is.na(x$steps)] <- x$intervalmean
View(x)
View(x)
x$intervalmean <- ts_byint$Steps
x$imputedsteps[is.na(x$steps)] <- x$intervalmean
View(x)
x$intervalmean <- ts_byint$Steps
x$imputedsteps <- x$steps
x$imputedsteps[is.na(x$steps)] <- x$intervalmean
View(x)
as.integer(mean(x$imputedsteps))
as.integer(median(x$imputedsteps))
summary(x)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
x$intervalmean <- ts_byint$Steps
x$imputedsteps <- x$steps
x$imputedsteps[is.na(x$imputedsteps)] <- x$intervalmean
View(x)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
View(x)
#Calc average steps by interval
ts_byint <- aggregate(x$steps, list(x$interval), mean, rm.na="TRUE")
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
