}
for (i in x$steps) {
if (!is.na(i)) {
print(x[i,])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$interval[i])
}
}
i = 32
print(x$interval[i])
for (i in x$steps) {
if (!is.na(i)) {
print(x$interval[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$interval[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print[i]
print(x$interval[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(i)
print(x$interval[i])
}
}
for (i in x$steps) {
if (!is.na(i)) {
print(i)
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
print(i)
if (is.na(i)) {
print(i)
print(x$interval[i])
print(x$date[i])
}
}
x$intervalmean <- ts_byint$Steps
head(x)
intervalmean <- ts_byint$Steps
View(ts_byint)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
intervalmean <- ts_byint$Steps
x$intervalmean <- ts_byint$Steps
View(x)
for (i in x$steps) {
print(i)
}
for (i in x$steps) {
if (is.na(i)) {
print(i)
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print x$steps[i]
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$steps[i])
print(x$interval[i])
print(x$date[i])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$steps[i,])
print(x$interval[i,])
print(x$date[i,])
}
}
for (i in x$steps) {
if (is.na(i)) {
print(x$steps[,i])
print(x$interval[,i])
print(x$date[,i])
}
}
print(x$steps[i])
i=2000
print(x$steps[i])
i=4000
print(x$steps[i])
print(x$steps[1])
print(x$steps[5555])
print(x$steps[555])
for (i in x$steps) {
if (!is.na(i)) {
print(x$steps[i])
print(x$interval[i])
print(x$date[i])
}
}
for (i in x) {
if (!is.na(x$steps[i])) {
print(x$steps[i])
print(x$interval[i])
print(x$date[i])
}
}
is.na(x$steps[444])
is.na(x$steps[444])
!is.na(x$steps[i])
!is.na(x$steps[6])
is.na(x$steps[6])
for (i in x) {
if (is.na(x$steps[i])) {
print(x$interval[i])
print(x$date[i])
}
}
for (i in x) {
if (is.na(x$steps[i])) {
print(x$interval[i])
print(x$date[i])
} else {
print(i)
}
}
for (i in x) {
if (is.na(x$steps[i])) {
print(x$intervalmean[i])
print(x$date[i])
} else {
print(i)
}
}
for (i in x) {
if (is.na(x$steps[i])) {
x$steps[i] <- x$intervalmean[i]
}
}
View(x)
View(x)
x[is.na(x$steps)] <- '.'
x$steps[is.na(x$steps)] <- '.'
View(x)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
x$steps[is.na(x$steps)] <- x$intervalmean
View(x)
x$steps[is.na(x$steps)] <- x$intervalmean
for i in x {
if  x$steps[is.na(x$steps)] {
print x$steps(i)
}
}
for (i in x) {
if (x$steps[is.na(x$steps)]) {
print x$steps(i)
}
}
for (i in x) {
if (is.na(x$steps[i]) {
print x$steps(i)
}
}
for (i in x) {
if (is.na(x$steps[i]) {
print x$steps[(i)]
}
for (i in x) {
x[is.na(x)] = x$intervalmean[i]
}
for (i in x) {
x[is.na(x)] <- x$intervalmean[i]
}
impute.value <- function(i) {
z <- i$intervalmean
i[is.na(i)] <- z
return(i)
}
dat2 <- sapply(x, function(x){
if(is.numeric(x) & any(is.na(x))){
impute.value(x)
}
}
)
View(x)
x$steps[is.na(x$steps)] <- x$intervalmean
x$intervalmean <- ts_byint$Steps
x$steps[is.na(x$steps)] <- x$intervalmean
View(x)
View(x)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
x$intervalmean <- ts_byint$Steps
x$steps[is.na(x$steps)] <- x$intervalmean
View(x)
View(x)
x$intervalmean <- ts_byint$Steps
x$imputedsteps[is.na(x$steps)] <- x$intervalmean
View(x)
x$intervalmean <- ts_byint$Steps
x$imputedsteps <- x$steps
x$imputedsteps[is.na(x$steps)] <- x$intervalmean
View(x)
as.integer(mean(x$imputedsteps))
as.integer(median(x$imputedsteps))
summary(x)
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
x$intervalmean <- ts_byint$Steps
x$imputedsteps <- x$steps
x$imputedsteps[is.na(x$imputedsteps)] <- x$intervalmean
View(x)
summary(x)
ts_byint <- aggregate(x$steps, list(x$interval), mean)
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
View(x)
#Calc average steps by interval
ts_byint <- aggregate(x$steps, list(x$interval), mean, rm.na="TRUE")
names(ts_byint) <- c("Date", "Steps")
#Present histogram of average steps by interval
qplot(ts_byint$Date, ts_byint$Steps)
---
title: 'Reproducible Research: Peer Assessment 1'
output:
html_document:
keep_md: yes
pdf_document: default
---
- Loading and preprocessing the data
```{r load_data}
x <- read.csv("activity.csv")
library(ggplot2)
summary(x)
```
####What is mean total number of steps taken per day?
```{r total_steps_by_date}
#Calc total steps by date
ts_bydate <- aggregate(x$steps, list(x$date), sum, na.rm=TRUE)
names(ts_bydate) <- c("Date", "Steps")
qplot(ts_bydate$Date, ts_bydate$Steps)
```
*The mean number of steps taken per day is
`r as.integer(mean(ts_bydate$Steps))` and the median number of steps taken per day is
`r as.integer(median(ts_bydate$Steps))`.*
####What is the average daily activity pattern?
```{r total_steps_by_interval}
#Calc average steps by interval
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("TimeInterval", "AvgSteps")
#Present histogram of average steps by interval
qplot(ts_byint$TimeInterval, ts_byint$AvgSteps)
```
- The chart above displays the average daily activity pattern across 5 minute intervals.
#### Imputing missing values
The total number of rows with NAs: `r sum(is.na(x$steps))`
```{r impute missing data}
x$intervalmean <- ts_byint$AvgSteps
x$imputedsteps <- x$steps
x$imputedsteps[is.na(x$imputedsteps)] <- x$intervalmean
```
*After missing value replacement, the mean number of steps taken per day is
`r as.integer(mean(x$imputedsteps))` and the median number of steps taken per day is
`r as.integer(median(x$imputedsteps))`.*
## Are there differences in activity patterns between weekdays and weekends?
--create total steps by weekday, create average steps by weekday
--create total steps by weekends, create average steps by weekend
--present raw differences between weekday average and weekend average
--run ANOVA to test difference
Overall there is/is not a significant difference in the total number of steps between weekdays and weekends. INSERT STATS.
--create average total steps by interval for weekday and weekend
----present chart of average steps by interval across weekend and weekend
END
View(x)
mean(x$imputedsteps)
aggregate(x$imputedsteps, list(x$date), sum, na.rm=TRUE)
mean(imp_bydate$Steps
)
imp_bydate <- aggregate(x$imputedsteps, list(x$date), sum, na.rm=TRUE)
imp_bydate$Steps
View(imp_bydate)
names(imp_bydate) <- c("Date", "Steps")
mean(imp_bydate$Steps)
as.integer(median(imp_bydate$Steps))
View(imp_bydate)
hist(imp_bydate)
hist(imp_bydate$Steps)
summary(imp_bydate$Steps)
weekday("monday")
weekdays("monday")
weekdays(x$Date)
weekdays(x$date)
weekdays(as.Date(x$date))
x$day <- weekdays(as.Date(x$date))
View(x)
if (x$day == "Monday") { print "Monday!"}
if (x$day == "Monday") { print "Monday!" }
if (x$day == "Monday") print "Monday!"
if (x$day == "Monday") print "Monday!"
x$weekday <- ifelse(x$day=="Saturday", "Weekend", "Weekday")
head x$weekday
head(x$weekday)
x$weekday <- ifelse(x$day=="Saturday" or x$day=="Sunday", "Weekend", "Weekday")
x$weekday <- ifelse(x$day == "Saturday" or "Sunday", "Weekend", "Weekday")
x$weekday <- ifelse(x$day == "Saturday" || "Sunday", "Weekend", "Weekday")
x$weekday <- ifelse(x$day == "Saturday" || x$day == "Sunday", "Weekend", "Weekday")
summary(x$day)
View(x)
tail(x$day)
table(x$day)
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday", "Weekend", "Weekday")
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday" || x$day == "Sunday", "Weekend", "Weekday")
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday" && x$day == "Sunday", "Weekend", "Weekday")
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday" && x$day == "Sunday", "Weekend", "Weekday")
x$weekday <- ifelse(x$day == "Saturday", "Weekend", "Weekday")
x$weekday <- ifelse(x$day == "Sunday", "Weekend")
x$weekday <- ifelse(x$day == "Saturday" || "Sunday", "Weekend", "Weekday")
x$weekday <- ifelse(x$day == "Saturday" && "Sunday", "Weekend", "Weekday")
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday", "Weekend", "Weekday")
x$weekday <- if(x$day == "Sunday") x$day == "Weekend"
x$weekday <- if(x$day == "Sunday") x$weekday <- "Weekend"
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday", "Weekend", "Weekday")
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday", "Weekend", ifelse(x$day == "Sunday", "Weekend", "Weekday")
)
table(x$weekday)
x$weekday <- ifelse(x$day == "Saturday", "Weekend", ifelse(x$day == "Sunday", "Weekend", "Weekday"))
table(x$weekday)
plot(x, type="l",
main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
plot(x$Steps, type="l",
main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
View(x)
weekend_data <- subset(x, weekday == "Weekend")
View(weekend_data)
weekday_data <- subset(x, weekday == "Weekday")
plot(weekday_data, type="l")
plot(weekday_data$imputedsteps, type="l")
plot(weekend_data$imputedsteps, type="l")
ts.plot(weekend_data$imputedsteps, weekday_data$imputedsteps)
require(graphics)
ts.plot(weekend_data$imputedsteps, weekday_data$imputedsteps)
plot(weekday_data$imputedsteps, type="l")
par(new=T)
plot(weekend_data$imputedsteps, type="l")
par(new=F)
plot(weekday_data$imputedsteps, type="l",col=2)
par(new=T)
plot(weekend_data$imputedsteps, type="l",col=3)
par(new=F)
plot(weekday_data$imputedsteps, type="l",col=2, main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
par(new=T)
plot(weekend_data$imputedsteps, type="l",col=3)
par(new=F)
plot(weekday_data$imputedsteps, type="l", main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
par(new=T)
plot(weekend_data$imputedsteps, type="l",col=3)
par(new=F)
View(imp_bydate)
View(weekday_data)
imp_bydate$weekday <- ifelse(imp_bydate$day == "Saturday", "Weekend", ifelse(x$day == "Sunday", "Weekend", "Weekday"))
weekend_data <- subset(imp_bydate, weekday == "Weekend")
weekday_data <- subset(imp_bydate, weekday == "Weekday")
ts_weekday <- aggregate(weekday_data$Steps, list(imp_bydate$interval), mean, na.rm=TRUE)
ts_weekend <- aggregate(weekend_data$Steps, list(imp_bydate$interval), mean, na.rm=TRUE)
names(ts_weekday) <- c("TimeInterval", "AvgSteps")
names(ts_weekend) <- c("TimeInterval", "AvgSteps")
imp_bydate$weekday <- ifelse(imp_bydate$day == "Saturday", "Weekend", ifelse(x$day == "Sunday", "Weekend", "Weekday"))
View(imp_bydate)
x$weekday <- ifelse(x$day == "Saturday", "Weekend", ifelse(x$day == "Sunday", "Weekend", "Weekday"))
weekend_data <- subset(x, weekday == "Weekend")
weekday_data <- subset(x, weekday == "Weekday")
ts_weekday <- aggregate(weekday_data$Steps, list(imp_bydate$interval), mean, na.rm=TRUE)
ts_weekend <- aggregate(weekend_data$Steps, list(imp_bydate$interval), mean, na.rm=TRUE)
names(ts_weekday) <- c("TimeInterval", "AvgSteps")
names(ts_weekend) <- c("TimeInterval", "AvgSteps")
ts_weekday <- aggregate(weekday_data$imputedsteps, list(imp_bydate$interval), mean, na.rm=TRUE)
ts_weekend <- aggregate(weekend_data$imptedsteps, list(imp_bydate$interval), mean, na.rm=TRUE)
names(ts_weekday) <- c("TimeInterval", "AvgSteps")
names(ts_weekend) <- c("TimeInterval", "AvgSteps")
ts_weekday <- aggregate(weekday_data$imputedsteps, list(x$interval), mean, na.rm=TRUE)
ts_weekend <- aggregate(weekend_data$imputedsteps, list(x$interval), mean, na.rm=TRUE)
names(ts_weekday) <- c("TimeInterval", "AvgSteps")
names(ts_weekend) <- c("TimeInterval", "AvgSteps")
ts_weekday <- aggregate(weekday_data$imputedsteps, list(weekday_data$interval), mean, na.rm=TRUE)
ts_weekend <- aggregate(weekend_data$imputedsteps, list(weekend_data$interval), mean, na.rm=TRUE)
names(ts_weekday) <- c("TimeInterval", "AvgSteps")
names(ts_weekend) <- c("TimeInterval", "AvgSteps")
plot(weekday_data$imputedsteps, type="l", main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
par(new=T)
plot(weekend_data$imputedsteps, type="l",col=3)
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="l", main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
par(new=T)
plot(weekend_data$imputedsteps ~ weekday_data$interval, type="l",col=3)
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="l", main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="chocolate")
par(new=T)
plot(weekend_data$imputedsteps ~ weekday_data$interval, type="l", col=red)
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="l", main="5' Interval Time Series",
ylab="Average # Steps",
xlab="Interval INDEX", col="blue")
par(new=T)
plot(weekend_data$imputedsteps ~ weekday_data$interval, type="l", col="red")
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="l", main="5-Minute Interval Time Series", ylab="Average # Steps", xlab="5-Minute Interval", col="blue")
par(new=T)
plot(weekend_data$imputedsteps ~ weekend_data$interval, type="l", col="red")
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="n", main="5-Minute Interval Time Series", ylab="Average # Steps", xlab="5-Minute Interval", col="blue")
par(new=T)
plot(weekend_data$imputedsteps ~ weekend_data$interval, type="n", col="red")
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="n", main="5-Minute Interval Time Series", ylab="Average # Steps", xlab="5-Minute Interval", col="blue")
par(new=T)
plot(weekend_data$imputedsteps ~ weekend_data$interval, type="n", col="red")
par(new=F)
plot(weekday_data$imputedsteps ~ weekday_data$interval, type="l", main="5-Minute Interval Time Series", ylab="Average # Steps", xlab="5-Minute Interval", col="blue")
par(new=T)
plot(weekend_data$imputedsteps ~ weekend_data$interval, type="l", col="red")
par(new=F)
View(weekday_data)
library(lattice)
x <- read.csv(unz("activity.zip", "activity.csv"))
library(ggplot2)
summary(x)
ts_bydate <- aggregate(x$steps, list(x$date), sum, na.rm=TRUE)
names(ts_bydate) <- c("Date", "Steps")
qplot(ts_bydate$Date, ts_bydate$Steps)
ts_byint <- aggregate(x$steps, list(x$interval), mean, na.rm=TRUE)
names(ts_byint) <- c("TimeInterval", "AvgSteps")
#Present histogram of average steps by interval
qplot(ts_byint$TimeInterval, ts_byint$AvgSteps)
x$intervalmean <- ts_byint$AvgSteps
x$imputedsteps <- x$steps
x$imputedsteps[is.na(x$imputedsteps)] <- x$intervalmean
imp_bydate <- aggregate(x$imputedsteps, list(x$date), sum, na.rm=TRUE)
names(imp_bydate) <- c("Date", "Steps")
x$day <- weekdays(as.Date(x$date))
x$weekday <- ifelse(x$day == "Saturday", "Weekend", ifelse(x$day == "Sunday", "Weekend", "Weekday"))
weekend_data <- subset(x, weekday == "Weekend")
weekday_data <- subset(x, weekday == "Weekday")
ts_weekday <- aggregate(weekday_data$imputedsteps, list(weekday_data$interval), mean, na.rm=TRUE)
ts_weekend <- aggregate(weekend_data$imputedsteps, list(weekend_data$interval), mean, na.rm=TRUE)
names(ts_weekday) <- c("TimeInterval", "AvgSteps")
names(ts_weekend) <- c("TimeInterval", "AvgSteps")
densityplot(~weekday_data$imputedsteps|weekday_data$interval)
ggplot(ts_weekend, aes(interval, imputedsteps)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views")
ggplot(ts_weekend, aes(interval, imputedsteps)) + geom_line() + xlab("") + ylab("Daily Views")
ggplot(weekday_data, aes(interval, imputedsteps)) + geom_line() + xlab("") + ylab("Daily Views")
ggplot(weekday_data, aes(interval, imputedsteps)) + geom_line() + xlab("Interval") + ylab("Average Steps")
ggplot(weekend_data, aes(interval, imputedsteps)) + geom_line() + xlab("Interval") + ylab("Average Steps")
ggplot(weekend_data, aes(interval, imputedsteps)) + geom_line() + xlab("Interval") + ylab("Average Steps", col="red")
ggplot(weekend_data, aes(interval, imputedsteps)) + geom_line(colour="red") + xlab("Interval") + ylab("Average Steps")
ggplot(weekday_data, aes(interval, imputedsteps)) + geom_line(colour="blue") + xlab("Interval") + ylab("Average Steps")
ggplot(weekend_data, aes(interval, imputedsteps)) + geom_line(colour="red") + xlab("Interval") + ylab("Average Steps")
